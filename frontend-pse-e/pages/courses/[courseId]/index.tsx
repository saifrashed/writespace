import Head from "next/head";
import { useRouter } from "next/router";
import useAssignments from "../../../lib/hooks/useAssignments"
import useCourse from "@/lib/hooks/useCourse";
import { Assignment } from "../../../lib/hooks/dummy"
import Link from "next/link";
import useAuthentication from "@/lib/hooks/useAuthentication";
import { motion } from "framer-motion";
import { useContext } from 'react';
import { Context } from '@/Context';

const CourseOverview = () => {
  const router = useRouter();
  
  const { courseId: courseIdString } = router.query;
  const courseId = parseInt(courseIdString as string, 10);

  const { token } = useAuthentication();
  const { assignments, isLoading } = useAssignments(courseId, token);

  const { course: contextCourse } = useContext(Context); // When pressing a course
  const { course: fetchedCourse } = useCourse(courseId, token); // When navigating to a course via url 
  const course = contextCourse || fetchedCourse; 
  
  const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    const options: Intl.DateTimeFormatOptions = {
      month: 'long',
      day: 'numeric',
      year: 'numeric' as const, // Specify the type explicitly
      hour: 'numeric',
      minute: 'numeric',
    };

    return date.toLocaleString('en-US', options);
  };

  return (
    <>
      <Head>
        <title>{course?.name} - WriteSpace</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="flex flex-col md:flex-row">
        <div className="bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 p-8 md:w-1/5 md:h-[100vh] flex items-center content-center justify-center">
          <div className="flex flex-col items-center">
            <motion.h5
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              layoutId={courseId}
              className="mb-1 text-xl font-medium text-gray-900 dark:text-white text-center">
              {course?.name}
            </motion.h5>
            <span className="text-sm text-gray-500 dark:text-gray-400">
              {course?.course_code}
            </span>
          </div>
        </div>
        <div className="relative overflow-x-auto sm:rounded-lg sm:p-2 md:p-4 lg:p-8 md:w-4/5">
          <table className="w-full text-sm text-left text-gray-500 dark:text-gray-400">
            <thead className="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
              <tr>
                <th scope="col" className="px-1 py-1 sm:px-3 sm:py-2.5 md:px-6 md:py-3">
                  Name
                </th>
                <th scope="col" className="px-1 py-1 sm:px-3 sm:py-2.5 md:px-6 md:py-3">
                  Due At
                </th>
                <th scope="col" className="px-1 py-1 sm:px-3 sm:py-2.5 md:px-6 md:py-3">
                  Submission Status
                </th>
              </tr>
            </thead>
            <tbody>
              {assignments.map((assignment: Assignment, index) => (
                assignment.published && (
                  <tr
                    key={index}
                    className="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600"
                  >
                    <td className="px-1 py-1 sm:px-3 sm:py-3 md:px-6 md:py-4">
                      <Link
                        href={`/courses/${courseId}/assignment/${assignment.id}`}
                      >{assignment.name}</Link></td>

                    <td className="px-1 py-1 sm:px-3 sm:py-3 md:px-6 md:py-4">
                      {formatDate(assignment.due_at)}
                    </td>
                    <td className="px-1 py-1 sm:px-3 sm:py-3 md:px-6 md:py-4">
                      <div
                        className={`flex items-center ${assignment.has_submitted_submissions
                          ? "text-emerald-400"
                          : "text-red-500"
                          } font-bold`}
                      >
                        <div
                          className={`h-2.5 w-2.5 rounded-full ${assignment.has_submitted_submissions
                            ? "bg-emerald-400"
                            : "bg-red-500"
                            } mr-2`}
                        ></div>
                        {assignment.has_submitted_submissions
                          ? "Submitted"
                          : "Not Submitted"}
                      </div>
                    </td>
                  </tr>
                )
              ))}
            </tbody>
          </table>
          {isLoading && (
            <div role="status" className="w-full p-4 space-y-4 border border-gray-200 divide-y divide-gray-200 rounded shadow animate-pulse dark:divide-gray-700 md:p-6 dark:border-gray-700">
              <div className="flex items-center justify-between">
                <div>
                  <div className="h-2.5 bg-gray-300 rounded-full dark:bg-gray-600 w-24 mb-2.5"></div>
                  <div className="w-32 h-2 bg-gray-200 rounded-full dark:bg-gray-700"></div>
                </div>
                <div className="h-2.5 bg-gray-300 rounded-full dark:bg-gray-700 w-12"></div>
              </div>
              <div className="flex items-center justify-between pt-4">
                <div>
                  <div className="h-2.5 bg-gray-300 rounded-full dark:bg-gray-600 w-24 mb-2.5"></div>
                  <div className="w-32 h-2 bg-gray-200 rounded-full dark:bg-gray-700"></div>
                </div>
                <div className="h-2.5 bg-gray-300 rounded-full dark:bg-gray-700 w-12"></div>
              </div>
              <div className="flex items-center justify-between pt-4">
                <div>
                  <div className="h-2.5 bg-gray-300 rounded-full dark:bg-gray-600 w-24 mb-2.5"></div>
                  <div className="w-32 h-2 bg-gray-200 rounded-full dark:bg-gray-700"></div>
                </div>
                <div className="h-2.5 bg-gray-300 rounded-full dark:bg-gray-700 w-12"></div>
              </div>
              <div className="flex items-center justify-between pt-4">
                <div>
                  <div className="h-2.5 bg-gray-300 rounded-full dark:bg-gray-600 w-24 mb-2.5"></div>
                  <div className="w-32 h-2 bg-gray-200 rounded-full dark:bg-gray-700"></div>
                </div>
                <div className="h-2.5 bg-gray-300 rounded-full dark:bg-gray-700 w-12"></div>
              </div>
              <div className="flex items-center justify-between pt-4">
                <div>
                  <div className="h-2.5 bg-gray-300 rounded-full dark:bg-gray-600 w-24 mb-2.5"></div>
                  <div className="w-32 h-2 bg-gray-200 rounded-full dark:bg-gray-700"></div>
                </div>
                <div className="h-2.5 bg-gray-300 rounded-full dark:bg-gray-700 w-12"></div>
              </div>
              <span className="sr-only">Loading...</span>
            </div>
          )}
        </div>
      </div>
    </>
  );
};

export default CourseOverview;
