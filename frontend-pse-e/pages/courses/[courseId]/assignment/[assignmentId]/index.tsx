import Head from "next/head";
import Image from "next/image";
import NavBar from "../../../../../components/NavBar";
import { useRouter } from "next/router";
import React, { useEffect, useState } from "react";
import Link from 'next/link';
import useAssignment from "@/lib/hooks/useAssignment";
import useAuthentication from "@/lib/hooks/useAuthentication";
import UploadPopup from "../../../../../components/UploadPopup";
import useSubmission from "@/lib/hooks/useSubmission";
import { formatDate } from "@/lib/date";
import Quiz from "@/components/Quiz"

const Assignments = () => {
  const router = useRouter();
  // Accessing query parameters from the router object
  const { courseId, assignmentId } = router.query;
  const { token } = useAuthentication();
  const { assignment, getAssignment } = useAssignment()
  const { submission, getSubmission } = useSubmission()

  // For the upload popup.
  const [showPopup, setShowPopup] = useState(false);
  const isTeacher = false;

  useEffect(() => {
    if (courseId && assignmentId && token) {
      getAssignment(parseInt(courseId.toString()), parseInt(assignmentId.toString()), token)
      getSubmission(parseInt(courseId.toString()), parseInt(assignmentId.toString()), token)
    }
  }, [router.query]);

  return (
    <>
      <Head>
        <title>Assignment - WriteSpace</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <NavBar />

      <div className="bg-gray-50 min-h-screen py-10 mt-14">
        <div className="max-w-5xl mx-auto px-6">
          <h1 className="text-3xl font-bold px-5">{assignment?.name}</h1>

          <div className="md:flex items-center justify-between mb-6 px-5">
            {!isTeacher && (
              <p className="mt-8 text-gray-600">
                <span className="font-bold">Grade: </span> {submission?.grade ? submission.grade : " Waiting to be graded"}
              </p>
            )}

            <p className="mt-8 text-gray-600">
              <span className="font-bold">Deadline: </span> {assignment?.due_at ? formatDate(assignment?.due_at) : "No due date"}
            </p>
          </div>

          {!isTeacher && (
            <div className="grid grid-cols-1 gap-0 md:grid-cols-5 ">
              <div className="col-span-4 p-4">
                <div className="w-full p-4 bg-white rounded-lg border border-gray-200 ">
                  <div className="flex space-x-4">
                    <div key={assignment?.id} className="text-lg text-gray-800" dangerouslySetInnerHTML={{ __html: assignment?.description ? assignment?.description : "No description available" }}>
                    </div>
                  </div>
                </div>
              </div>
              <div className="col-span-1 p-4 ">
                <div className="w-full p-4 bg-white rounded-lg border border-gray-200">
                  <div className="flex flex-col">
                    <a
                      className="inline-flex items-center gap-2  text-center rounded border border-indigo-600 px-8 py-3 text-indigo-600 hover:bg-indigo-600 hover:text-white focus:outline-none focus:ring active:bg-indigo-500"
                      onClick={() => { setShowPopup(!showPopup) }}
                    >
                      <span className="text-sm font-medium"> Submit </span>
                      <i className="fa-solid fa-upload"></i>
                    </a>
                    <Link href={`/courses/${courseId}/assignment/${assignmentId}/submission/view`}
                      className="inline-flex items-center text-center gap-2 rounded border border-indigo-600 mt-2 px-8 py-3 bg-indigo-600 text-white hover:bg-indigo-600 hover:text-white focus:outline-none focus:ring active:bg-indigo-500"
                    >
                      <span className="text-sm font-medium"> View </span>
                      <i className="fa-solid fa-eye"></i>
                    </Link>
                  </div>
                </div>
              </div>
            </div>
          )}
          {isTeacher && (
            <div className="w-full relative overflow-x-auto shadow-md sm:p-2 md:p-4 lg:p-8 md:w-4/5">
              <table className="w-full text-sm text-left">
                <thead className="text-xs text-gray-700 uppercase bg-white-50 dark:bg-gray-700 dark:text-gray-400">
                  <tr>
                    <th scope="col" className="px-6 py-4 whitespace-nowrap">
                      Name
                    </th>
                    <th scope="col" className="px-6 py-4 whitespace-nowrap">
                      Submission Status
                    </th>
                    <th scope="col" className="px-6 py-4 whitespace-nowrap">
                      Grade Status
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr className="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
                    <th scope="row" className="px-6 py-4 whitespace-nowrap">
                      <Link
                        href={`/courses/${courseId}/assignment/${assignmentId}/submission/grade`}
                      >
                        Student name
                      </Link>
                    </th>
                    <td scope="row" className="px-6 py-4 whitespace-nowrap">
                      submitted
                    </td>
                    <td scope="row" className="px-6 py-4 whitespace-nowrap">
                      Graded
                    </td>
                  </tr>
                  <tr>
                    <th scope="row" className="px-6 py-4 whitespace-nowrap">
                      Student name
                    </th>
                  </tr>
                </tbody>
              </table>
            </div>
          )}

          <Quiz />
          <UploadPopup showPopup={showPopup} togglePopup={() => { setShowPopup(!showPopup) }} assignmentId={assignmentId} />

        </div>
      </div>
    </>
  );
};

export default Assignments;
