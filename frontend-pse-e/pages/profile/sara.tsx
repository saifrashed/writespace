import Head from "next/head";
import NavBar from "@/components/NavBar";
import Avatar from '@mui/material/Avatar';
import ScaledBadge from '@/components/badge-template/Badge';
import useUser from "@/lib/hooks/useUser";
import { useEffect, useState } from 'react';
import useAuthentication from "@/lib/hooks/useAuthentication";
import useBadges from "@/lib/hooks/useBadges";
import Slider from "react-slick";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";


/**
 * The profile page component.
 *
 * @component
 * @returns {JSX.Element} The rendered profile page.
 */
const Profile = () => {
  const { token } = useAuthentication();
  const { user, getUser, updateUserPicture } = useUser(token);
  const [isLegendary, setIslegendary] = useState<boolean>()
  const { badges } = useBadges(token)
  const [isProfilePictureUpdated, setIsProfilePictureUpdated] = useState(false);

  const carouselImages = [
    "https://images.unsplash.com/photo-1495615080073-6b89c9839ce0?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=906&q=80",
    "https://images.unsplash.com/photo-1597589827317-4c6d6e0a90bd?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=880&q=80",
    "https://images.unsplash.com/photo-1525351326368-efbb5cb6814d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=880&q=80",
    "https://images.unsplash.com/photo-1600354587397-681c16c184bf?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=880&q=80",
    "https://images.unsplash.com/photo-1504600770771-fb03a6961d33?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8c3F1YXJlfGVufDB8fDB8fHww&auto=format&fit=crop&w=500&q=60",
    "https://images.unsplash.com/photo-1615485737651-580c9159c89a?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=881&q=80",
    "https://images.unsplash.com/photo-1612392549296-c7623f23665a?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=880&q=80",
    "https://images.unsplash.com/photo-1587132164684-cfd0b8214d8e?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=880&q=80",
    "https://images.unsplash.com/photo-1573538447152-e6fe80357e8f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=880&q=80",
    "https://images.unsplash.com/photo-1610177498573-78deaa4a797b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=880&q=80",
  ];

  const carouselSettings = {
    dots: true,
    infinite: true,
    speed: 500,
    slidesToShow: 5,
    slidesToScroll: 1,
    autoplay: true,
    centerMode: true,
    autoplaySpeed: 5000,

  };

  function countBadgeOccurrences(targetBadgeId: number) {
    let count = 0;
    if (user) {
      for (const badge of user?.badges) {
        if (badge.badgeId === targetBadgeId) {
          count++;
        }
      }
    }

    return count;
  }

  useEffect(() => {
    if (user) {
      setIslegendary(user && user.level >= 100)
    }
  }, [user])

  useEffect(() => {
    if (isProfilePictureUpdated) {
      // Fetch updated user data
      getUser(token);
      // Reset the state
      setIsProfilePictureUpdated(false);
    }
  }, [isProfilePictureUpdated, getUser, token]);

  const handleChooseProfilePicture = async (badgeId: number) => {
    await updateUserPicture(badgeId, token);
  };

  return (
    <>
      <Head>
        <title>Profile page</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar />

      <div className="mt-14 text-center pt-10">

      <div className="flex flex-col items-center justify-center mt-10">
        <Avatar
          sx={{ width: 300, height: 300, border: '2px solid #706f7d', padding: '30px', boxShadow:'0px 0px 30px 2px gray'
        }}
          src={user?.pictureId === 0 || user?.pictureId === undefined ? '' : `/badges/${user?.pictureId}.png`}
        />


        <div className={`mt-4 text-center font-bold text-5xl font-medium leading-tight ${isLegendary && "gradient-text"}`}>{user?.name}</div>
        {user && (
          <div className="lg:flex lg:row lg:justify-center lg:w-full">
            <div className={`mt-2 lg:me-1 text-center font-bold mb-5 text-2xl font-medium leading-tight ${isLegendary && "gradient-text"}`}> XP {user.experiencePoints}</div>
            <div className={`mt-2 lg:ms-1 text-center font-bold mb-5 text-2xl font-medium leading-tight ${isLegendary && "gradient-text"}`}> Level {user.level}</div>
          </div>
        )}
      </div>


      <Slider {...carouselSettings}>
        {carouselImages.map((image, index) => (
          <div key={index}>
            <img src={image} alt={`Carousel Image ${index + 1}`} />
          </div>
        ))}
      </Slider>


    </div>
    </>
  );
}

export default Profile;
